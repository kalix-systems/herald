[env]
LINUX_DEPLOY_DL = "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
OUT_DIR = { source = "${CARGO_MAKE_RUST_TARGET_OS}", default_value = "build", mapping = {"linux" = ".appimage", "unknown"="build", "macos" = "build", "windows"="build"} }

# Builds libherald with desktop deployment feature
[tasks.build_libherald]
private = true
command = "cargo"
args = ["build", "--release",
	"-p", "herald",
	"--features", "deploy_desktop"
]

# Creates AppImage build directory if it does not already exist
[tasks.make_out_dir]
private = true
command = "mkdir"
args = ["-p", "${OUT_DIR}"]


# Installs the `linuxdeploy` tool, and plugins
[tasks.install_linuxdeploy]
private = true
install_script = [
  '''
  if ! [ -f "$OUT_DIR/linuxdeploy-x86_64.AppImage" ]; then
    wget "$LINUX_DEPLOY_DL" -O $OUT_DIR/linuxdeploy-x86_64.AppImage
    wget "$QT_PLUGIN_DL" -O $OUT_DIR/linuxdeploy-plugin-qt-x86_64.AppImage
    chmod +x $OUT_DIR/linuxdeploy*.AppImage
  fi
  '''
]
dependencies = ["make_out_dir"]


[tasks.check_qmake_installation]
private = true
script = [
  '''
  if ! [ -x "$(command -v qmake)" ]; then
    echo "Error: qmake is not installed." >&2
    exit 1
  fi
  '''
]

# Runs qmake
[tasks.run_qmake]
private = true
command = "qmake"
args = ["client/desktop/herald.pro",
	"-spec", "linux-g++",
	"CONFIG+=qtquickcompiler",
	"-o", "${OUT_DIR}/Makefile"]
dependencies = ["check_qmake_installation", "make_out_dir"]

# Runs qmake on macos
[tasks.run_qmake.mac]
private = true
command = "qmake"
args = ["client/desktop/herald.pro",
	"CONFIG+=qtquickcompiler",
	"-o", "${OUT_DIR}/Makefile"]

[tasks.setup_outdir]
workspace = false
dependencies = ["build_libherald", "run_qmake"]


[tasks.run_make]
script = [
  '''
  make -C $OUT_DIR -j$(nproc)
  '''
]
dependencies = ["setup_outdir"]


[tasks.run_make_install]
workspace = false
command = "make"
args = ["-C", "${OUT_DIR}",
	"install", "INSTALL_ROOT=AppDir"]
dependencies = ["run_make"]


[tasks.build_appimage]
workspace = false
script = [
  '''
  QML_SOURCES_PATHS=../client/desktop

  cd $OUT_DIR
  ./linuxdeploy-x86_64.AppImage \
    --appdir AppDir \
    --output appimage \
    --plugin qt \
    -i ../client/foundation/icons/herald.png \
    -d ../client/desktop/herald.desktop \
    -l ../target/release/libherald.so \
    -v 0
  '''
]
dependencies = ["run_make_install"]

[tasks.find_macdeploy]
script = [
'''
if ! [ -x "$(command -v macdeployqt)" ]; then
  printf "\n Could not find macdeployqt, exiting \n"
  exit 1
fi
'''
]



[tasks.build_dmg]
workspace = false
script = [
'''
echo You are not on a darwin or macos platform, exiting
exit 1
'''
]

[tasks.build_app_bundle]
workspace = false
script = [
'''
echo You are not on a darwin or macos platform, exiting
exit 1
'''
]

[tasks.build_app_bundle.mac]
workspace = false
script = [
  '''
  cd $OUT_DIR
  macdeployqt herald.app -qmldir=../client/desktop
  '''
]
dependencies = ["run_make_install","find_macdeploy"]


[tasks.build_dmg.mac]
workspace = false
script = [
  '''
  cd $OUT_DIR
  macdeployqt herald.app -dmg -qmldir=../client/desktop
  '''
]
dependencies = ["run_make_install","find_macdeploy"]


